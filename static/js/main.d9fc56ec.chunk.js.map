{"version":3,"sources":["components/MyCheckbox.js","utility/arrays-helper.js","components/CheckboxOption.js","components/RadioOption.js","Categories.js","App.js","reportWebVitals.js","index.js"],"names":["MyCheckbox","props","useState","isChecked","setIsChecked","FormControlLabel","value","index","control","Checkbox","color","onClick","isOn","arr","saved","JSON","parse","sessionStorage","getItem","category","title","filter","ele","push","setItem","stringify","label","labelPlacement","checked","CheckboxOption","windowWidth","useWindowWidth","checkboxes","array","i","options","length","element","create_checkboxes","get_selected","forEach","className","style","width","RadioOption","selectedState","RadioGroup","onChange","event","target","Radio","choices","Categories","reviewInfo","setReviewInfo","categoryComponents","type","create_categories","check_review_in_new_window","text","window","open","document","write","String","raw","replaceAll","Button","variant","localReviewString","appendOption","option","categoryJson","selectedOptions","includes","navigator","clipboard","writeText","then","console","log","err","error","App","config_json","categories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9fc56ec.chunk.js","sourcesContent":["import \"./Option.css\";\nimport React, { useState } from \"react\";\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport arrayRemove from \"../utility/arrays-helper\";\n\nexport default function MyCheckbox(props) {\n  const [isChecked, setIsChecked] = useState(false);\n\n  const toggle = () => {\n    props.props.isOn = !isChecked;\n    var saved = JSON.parse(\n      sessionStorage.getItem(props.props.category) || \"[]\"\n    );\n\n    if (!isChecked) {\n      saved.push(props.props.title);\n    } else {\n      saved = arrayRemove(saved, props.props.title);\n    }\n    sessionStorage.setItem(props.props.category, JSON.stringify(saved));\n\n    setIsChecked(!isChecked);\n  };\n\n  return (\n    <FormControlLabel\n      value={props.props.index}\n      control={<Checkbox color=\"primary\" onClick={toggle} />}\n      label={props.props.title}\n      labelPlacement=\"end\"\n      checked={isChecked}\n    />\n  );\n}\n","export default function arrayRemove(arr, value) {\n  return arr.filter(function (ele) {\n    return ele !== value;\n  });\n}\n","import \"./Option.css\";\nimport React from \"react\";\nimport MyCheckbox from \"./MyCheckbox\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\n\nexport default function CheckboxOption(props) {\n  props = props.props;\n  const windowWidth = useWindowWidth();\n\n  const create_checkboxes = () => {\n    var array = [];\n    for (let i = 0; i < props.options.length; i++) {\n      const element = props.options[i];\n      array.push(\n        <MyCheckbox\n          props={{ title: element, index: i, category: props.title }}\n        />\n      );\n    }\n    return array;\n  };\n  const checkboxes = create_checkboxes();\n\n  props.get_selected = () => {\n    var checked = [];\n    checkboxes.forEach((element) => {\n      if (element.props.props.isOn) {\n        checked.push(element.props.props.title);\n      }\n    });\n    return checked;\n  };\n\n  return (\n    <div\n      className=\"radio-container\"\n      style={{ width: windowWidth < 1000 ? \"90%\" : \"40%\" }}\n    >\n      <h3 className=\"snug\">{props.title}</h3>\n      {checkboxes}\n    </div>\n  );\n}\n","import \"./Option.css\";\nimport React from \"react\";\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\n\nexport default function RadioOption(props) {\n  const windowWidth = useWindowWidth();\n\n  props = props.props;\n  props.selectedState = \"\";\n\n  const radioClicked = (event) => {\n    props.selectedState = event.target.value;\n    sessionStorage.setItem(props.title, event.target.value);\n  };\n\n  const choices = () => {\n    var array = [];\n    for (let i = 0; i < props.options.length; i++) {\n      const element = props.options[i];\n      array.push(\n        <FormControlLabel\n          value={element}\n          control={<Radio color=\"primary\" />}\n          label={element}\n        />\n      );\n    }\n    return array;\n  };\n\n  return (\n    <div\n      className=\"radio-container\"\n      style={{ width: windowWidth < 1000 ? \"90%\" : \"40%\" }}\n    >\n      <h3 className=\"snug\">{props.title}</h3>\n      <RadioGroup onChange={radioClicked}>{choices()}</RadioGroup>\n    </div>\n  );\n}\n","import './Categories.css';\nimport React, { useState } from 'react';\nimport CheckboxOption from './components/CheckboxOption';\nimport RadioOption from './components/RadioOption';\nimport { Button } from '@material-ui/core';\n\nexport default function Categories(props) {\n\n    const [reviewInfo, setReviewInfo] = useState(\"\")\n\n    const create_categories = () => {\n        var array = []\n        for (let i = 0; i < props.props.length; i++) {\n            const element = props.props[i];\n            if (element.type === \"radio\") {\n                array.push(<RadioOption props={element} />)\n            } else if (element.type === \"check\") {\n                array.push(<CheckboxOption props={element} />)\n            }\n        }\n        return array\n    }\n    const categoryComponents = create_categories()\n\n    const generate_review = () => {\n        var localReviewString = \"\"\n\n        function appendCategoryTitle(title) {\n            localReviewString += \"---{ \" + title + \" }---\\n\"\n        }\n\n        function appendOption(option, checked) {\n            localReviewString += (checked ? \"☑ \" : \"☐ \") + option + \"\\n\"\n        }\n\n        for (let i = 0; i < props.props.length; i++) {\n            const categoryJson = props.props[i];\n\n            appendCategoryTitle(categoryJson.title)\n\n            // With radio, only one option is selected\n            if (categoryJson.type === \"radio\") {\n                const saved = sessionStorage.getItem(categoryJson.title) || \"\"\n                categoryJson.options.forEach(option => {\n                    appendOption(option, saved === option)\n                });\n            } else if (categoryJson.type === \"check\") {\n                // With checkbox, multiple options can be selected\n                const selectedOptions = JSON.parse(sessionStorage.getItem(categoryJson.title) || \"[]\")\n                categoryJson.options.forEach(option => {\n                    appendOption(option, selectedOptions.includes(option))\n                });\n            } else {\n                localReviewString += \"ERROR - bad category type. (radio | check)\\n\"\n            }\n\n            // newline under every category\n            localReviewString += \"\\n\"\n        }\n\n        // Credit \n        localReviewString += \"\\nGrab this review template here! 👉 https://vojtastruhar.github.io/steam-review-template/\\n\"\n\n        navigator.clipboard.writeText(localReviewString).then(function () {\n            console.log('Async: Copying to clipboard was successful!');\n            setReviewInfo(\"The review has been copied into your clipboard!\")\n        }, function (err) {\n            console.error('Async: Could not copy text: ', err);\n            setReviewInfo(\"Copying into clipboard failed. New window with the review should appear, please, copy it manually.\")\n            check_review_in_new_window(localReviewString)\n        });\n    }\n\n    const check_review_in_new_window = (text) => {\n        var newWin = window.open('url', 'Steam review', 'height=700,width=500,scrollbars=yes,resizable=yes');\n        newWin.document.write(String.raw`${text.replaceAll(\"\\n\", \"<br/>\")}`);\n    }\n\n    return (\n        <div>\n            <div className=\"centered\">\n                <div>\n                    {categoryComponents}\n                </div>\n            </div>\n            <div className=\"button-centered\">\n                <Button variant=\"contained\" color=\"primary\" onClick={generate_review}>\n                    Steamレビューを生成（クリップボードにコピーされます）\n                </Button>\n                {reviewInfo !== \"\" &&\n                    <p className=\"review\" >{reviewInfo}</p>\n                }\n            </div>\n        </div>\n    )\n}\n\n","import \"./App.css\";\nimport Categories from \"./Categories\";\nimport config_json from \"./review_templates/config_rdr2.json\";\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <h2 className=\"App-header\">{\"---{ Review Template }---\"}</h2>\n        <p className=\"App-header\">☑ Awesome</p>\n      </header>\n\n      <div className=\"categories-container\">\n        <Categories props={config_json.categories} />\n      </div>\n\n      <footer className=\"App-footer\">\n        <p className=\"signature\">Vojtěch Struhár, 2021</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}